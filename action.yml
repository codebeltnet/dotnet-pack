name: .NET Pack
description: An opinionated action that retrieve previously build projects and packs them into a NuGet package.
inputs:
  configuration:
    description: Defines the build configuration. Default is Release.
    required: true
    default: 'Release'
  level:
    description: Sets the verbosity level of the command. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic]. The default is quiet.
    required: true
    default: 'quiet'
  uploadPackedArtifact:
    description: Upload the created NuGet packages. Default is to not upload.
    required: false
    default: 'false'
  version:
    description: The version of your project, e.g. 1.0.0.
    required: true
  restoreCacheKey:
    description: When set, current workspace will be overwritten with the content of the restore cache. Default is empty.
    required: false
    default: ''
  downloadBuildArtifact:
    description: Download the build artifact. Default is to not download.
    required: false
    default: 'false'
runs:
  using: composite
  steps:
    - if: inputs.restoreCacheKey != ''
      name: Restore
      uses: actions/cache/restore@v4
      with:
        path: |
          ${{ github.workspace }}
          ~/.nuget/packages
        key: ${{ inputs.restoreCacheKey }}
        restore-keys: |
          dotnet-restore-
        enableCrossOsArchive: true
        fail-on-cache-miss: true

    - if: inputs.downloadBuildArtifact == 'true'
      name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: '*-${{ inputs.configuration }}'
        merge-multiple: true

    - name: Set Version
      run: |
        echo "MINVERVERSIONOVERRIDE=${{ inputs.version }}" >> $GITHUB_ENV
      shell: bash

    - if: inputs.restoreCacheKey == ''
      name: Pack (Pre-requisite)
      run: |
        dotnet restore --verbosity ${{ inputs.level }}
      shell: bash

    - name: Pack
      run: |
        dotnet pack --configuration ${{ inputs.configuration }} --verbosity ${{ inputs.level }} --no-build --output ${{ runner.temp }}/.nuget
      shell: bash

    - if: inputs.uploadPackedArtifact == 'true'
      name: Upload NuGet Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: NuGet-${{ inputs.configuration }}
        path: ${{ runner.temp }}/.nuget
branding:
  icon: 'umbrella'
  color: 'blue'
